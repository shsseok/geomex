스코프
전역 스코프:말 그대로 전역에 선언되어 있어서 어느 곳에서든지 해당 변수에 접근 가능
지역 스코프:해당 지역에서만 접근할 수 있음

스코프 체인
자기 자신의 스코프를 제외한 자신과 가장 가까운 변수 객체의 모든 스코프들을 스코프 체인이라고 함
var v = "전역 변수";

function a() {
//function a Execution Context(EC)
	var v = "지역 변수";    
    function b() {
    	//function b Execution Context
    	console.log(v);
    }   
    b();
}
//Global Execution Context
a();

DOM
문서 객체 모델 --> 예를 들어서 텍스트 파일이나 먼가 웹 문서를 브라우저에 렌더링 하려면 웹 문서를 브라우저가 이해할 수 있는 구조로 메모리에 올려야한다.--> 여기서 브라우저가 웹 문서를 이해할 수 있도록 구성된 것을 DOM이라고 한다 (트리 구조로 구성되어져 있음) 자바스크립트를 통해 동적으로 변경가능하다.
문서 노드 --> document
요소 노드 --> 말 그대로 태그들 <p> <div>
어티리뷰트 노드--> 태그 안에 있는 속성 값
텍스트 노드 --> 태그 내 텍스트
BOM
window객체를 통해 접근 가능하며 자바스크립트가 브라우저와 소통하기 위해서 만들어진 모델이라고 생각

$document.ready(function())
{
}
이거는 DOM객체들 문서가 브라우저에 올라오면 즉 다 로딩이 된 다음에 저 함수를 실행해라 ~

var,let,const 차이
var
1.같은 스코프 안에서는 재선언이 가능하다
2,var(함수 스코프) if문과 for문에서 선언을 해도 밖에서도 쓸 수 있다.
3.호이스팅 가능
4.재할당 가능

호이스팅 이란?
간단하게 선언을 먼저 메모리에 탑재를 해놓고 이후에 값을 할당
var a=3;
--> js 에서는 var a;  a=3; 이런식으로 해석하기 때문에 오류가 안난다.

let 
1.블록 스코프를 가짐 블록 내에서만 접근 가능하다 밖에서는 접근 불가능
2.재할당이 가능하다
3.
const
1.자바의 final과 같다고 생각하면된다.
2.재할당 불가능 선언과 초기화가 동시해 이루어져야함 값을 바꿀 수 없다.

화살표 함수와 일반 함수의 차이
1.this
일반함수
함수를 선언할 때 this에 바인딩 할 객체가 정적으로 결정되는 것이 아니고,
함수를 호출할 때 함수가 어떻게 호출되었는지에 따라 this에 바인딩할 객체가 동적으로 결정된다.
