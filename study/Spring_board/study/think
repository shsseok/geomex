1. ResponseBody의 역할을 이해하고 코드에 적용한다. (언제 어떻게 사용하는지 이해해야함)
2. @Trancation 어노테이션 사용법 숙지 후 소스코드에 적용한다.
3. 리졸버에 대한 개념을 이해한다.
4. 조인의 개념을 이해한다.
5. 불필요(설정파일 및 소스)한 자원을 제거한다.
6. MVC 패턴에 맞게 소스코드를 리펙토링 한다. (예 : 컨트롤러에 서비스 로직을 제거)
7. 명명규칙을 제대로 적용한다.
8. 스프링의 전체적인 코드 구성을 이해하고 설명할 수 있어야 한다.

@ResponseBody
ResponseBody가 붙은 메소드들이나 클래스는 모두 데이터를 전달해주기 위한 용이다 뷰 반환(X)
@Requestbody @ModelAttribute 차이
  @Requestbody
    보통 json형태의 데이터를 받아서 객체로 바인딩 한다.
    getter와 setter가 없더라도 정상 동작한다 --> message converter로 자바 객체로 바꾸는 것이기 때문에 주입이 아닌 변환으로 인한 할당
  @ModelAttribute
    폼 형태의 Http Body와 요청 파라미터를 객체에 바인딩 시킨다. --> setter에 주입해서 사용
    json형태는 처리하지 못한다.
뷰 리졸버
  뷰 리졸버란 컨트롤러에서 반환한 뷰의 이름을 가지고 사용할 뷰 오브젝트 말그대로 뷰 파일을 찾아주는 역할을 한다. 
  하나 이상의 뷰리졸버 bean을 사용한다.? --> order속성을 이용해서 우선순위를 매기자 그러면 우선순위가 높은 뷰 리졸버가 반환해준다.
뷰 리졸버의 종류
  1.InternalResourceViewResolver
      디폴트 뷰 리졸버이다. 주로 jsp를 뷰로 사용하고자할 때 쓰인다.
      prefix,suffix프로퍼티를 지정해서 사용하면 편하다
  2.LocaleResolver
    구현체
      AcceptHeaderLocaleResolver HTTP 헤더의 Accept-Language 값을 기반으로 Locale 값을 정하기 때문에 Accept-Language 값을 먼저 지정해줘야 한다.
      SessionLocaleResolver	세션으로부터 Locale 정보를 구한다.
      CookieLocaleResolver	쿠키를 이용해서 Locale 정보를 구한다.
      FixedLocaleResolver 웹 요청에 상관없이 특정한 Locale로 설정한다.
  3.MultipartResolver
        CommonsMultipartResolver
        StandardServletMultipartResolver
      멀티파트 포맷의 요청정보를 처리하는 전략을 설정할 수 있다.
      멀티파트 리졸버는 디폴트로 등록되는 것이 없어 빈 등록이 필요하다.
      보통 과다한 크기의 파일 업로드를 막기 위해 maxUploadSize 프로퍼티를 설정하도록 권장된다.
  4. BeanNameViewResolver
      현재 Application Context에 등록된 Bean name을 이용해 View name을 해석한다.
       View name과 동일한 Bean을 찾아 해당 View 객체를 사용한다.
  5.XmlViewResolver
      XML 파일을 사용하여 뷰 이름과 뷰 클래스를 매핑합니다. 별도의 XML 설정 파일에서 뷰에 대한 정보를 제공한다.
조인의 개념
 하나의 테이블에 원하는 데이터가 아닌 두개의 테이블을 엮어서 원하는 데이터들을 추출하고자 할 때 사용한다.
 inner join(내부 조인)
  두테이블에서 공통된 것을 가지고 올때 ex) 게시판 테이블과 파일 테이블이 있다 게시판 테이블은 boardId를 사용한다 파일 테이블도 boardId를 사용한다 where절로 묶어서 검색조건 원하는 정보를 가져온다.
      SELECT <열 목록>
      FROM <첫 번째 테이블>
      INNER JOIN <두 번째 테이블>
      ON <조인 조건>
      [WHERE 검색 조건]
  left join(외부 조인)
  Right join(외부 조인)
    위의 내부 조인과는 다르게 한쪽 테이블에만 데이터가 있어서 결과가 나온다. ex) 위와 똑같이 경우가 있다고 가정하자 LEFT조인은 예를 들어서 먼가 게시판 테이블과 파일 테이블을 LEFT조인을 통해 조회를 한다면
    조건 을 위와 같이 준다고 가졍해서 게시판과 파일 모두 작성한 글이 있을것이고 게시판만 작성한 글이 있다 하면 게시판을 전체 조회를 할때 파일이 있는 것과 없는 것을 구분해서 가져와야 한다. 
    가져올 때 게시글은 모두 가져오고 파일이 없는 게시글은 파일 테이블의 열들이 모두 NULL값으로 처리되서 가져올 수 있다. LEFT조인으로 모든 게시글을 가지고와서 NULL인것은 파일이 있는지 없는지 여부도 표현할 수 있다.

  
